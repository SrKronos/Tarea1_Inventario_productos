/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Productos;

import java.awt.Dimension;
import Productos.Producto;
import Productos.ControladorProducto;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import Util.Respuesta;
import java.awt.Color;
import java.text.DecimalFormatSymbols;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
/**
 *
 * @author Asus.com
 */
public class rowProductosSimple extends javax.swing.JPanel {

    public static Producto p1;
    ControladorProducto cp;

    DecimalFormatSymbols symbols = new DecimalFormatSymbols();
char decimalSeparator = symbols.getDecimalSeparator(); // Obtiene el separador decimal (puede ser ',' o '.')

// Crea una expresión regular que permita tanto el separador de decimales como los números
String regex = "^\\d+[" + decimalSeparator + "]?\\d{0.2}$";

    /**
     * Creates new form rowProductos
     * 
     */
    JFrame padre = new JFrame();
    public rowProductosSimple(Producto p,JFrame pf){
       initComponents();    
        padre = pf;
        p1 = p;
        cp = new ControladorProducto();
        getValores();
    }
    public rowProductosSimple() {
        initComponents();
        p1 = new Producto();
        cp = new ControladorProducto();
        getValores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        campo_codigo = new javax.swing.JTextField();
        campo_producto = new javax.swing.JTextField();
        campo_valor = new javax.swing.JTextField();
        campo_descripcion = new javax.swing.JTextField();
        campo_activo = new javax.swing.JCheckBox();
        btnGuardarProducto = new javax.swing.JButton();
        campo_cantidad = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(231, 231, 231));
        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setMaximumSize(new java.awt.Dimension(910, 60));
        setMinimumSize(new java.awt.Dimension(910, 60));
        setPreferredSize(new java.awt.Dimension(910, 60));

        campo_codigo.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        campo_codigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campo_codigo.setText("0000");
        campo_codigo.setToolTipText("Código");
        campo_codigo.setEnabled(false);
        campo_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_codigoActionPerformed(evt);
            }
        });

        campo_producto.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        campo_producto.setText("Nombre del Producto");
        campo_producto.setToolTipText("Nombre");
        campo_producto.setEnabled(false);
        campo_producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_productoActionPerformed(evt);
            }
        });
        campo_producto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campo_productoKeyReleased(evt);
            }
        });

        campo_valor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        campo_valor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        campo_valor.setText("0.00");
        campo_valor.setToolTipText("Valor $");
        campo_valor.setEnabled(false);
        campo_valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_valorActionPerformed(evt);
            }
        });
        campo_valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campo_valorKeyReleased(evt);
            }
        });

        campo_descripcion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        campo_descripcion.setText("Descripción");
        campo_descripcion.setToolTipText("Descripción");
        campo_descripcion.setEnabled(false);

        campo_activo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        campo_activo.setSelected(true);
        campo_activo.setText("Activo");
        campo_activo.setToolTipText("Activar o Desacticar");
        campo_activo.setEnabled(false);

        btnGuardarProducto.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnGuardarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pack_check_32.png"))); // NOI18N
        btnGuardarProducto.setToolTipText("Seleccionar");
        btnGuardarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarProductoActionPerformed(evt);
            }
        });

        campo_cantidad.setEnabled(false);
        campo_cantidad.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                campo_cantidadInputMethodTextChanged(evt);
            }
        });
        campo_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campo_cantidadKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("$");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(campo_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_producto, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(campo_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(campo_activo)
                .addGap(6, 6, 6)
                .addComponent(btnGuardarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(campo_codigo)
                    .addComponent(campo_producto)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(campo_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(campo_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(campo_cantidad)
                    .addComponent(campo_activo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void campo_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo_codigoActionPerformed

    private void btnGuardarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarProductoActionPerformed
        
    }//GEN-LAST:event_btnGuardarProductoActionPerformed

    private void campo_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_productoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo_productoActionPerformed

    private void campo_productoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_productoKeyReleased
        
    }//GEN-LAST:event_campo_productoKeyReleased

    private void campo_valorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_valorKeyReleased
        String texto = campo_valor.getText();
        if (!texto.matches("^\\d+(\\.\\d{0,2})?$")) {
            campo_valor.setText(texto.substring(0, texto.length() - 1));
        }
    }//GEN-LAST:event_campo_valorKeyReleased

    private void campo_valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_valorActionPerformed
                
    }//GEN-LAST:event_campo_valorActionPerformed

    private void campo_cantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_cantidadKeyReleased
                String texto = String.copyValueOf((char[]) campo_cantidad.getValue());
                if (!texto.matches("^\\d+$")) {
                    campo_cantidad.setValue(Integer.parseInt(texto.substring(0, texto.length() - 1)));
                }
    }//GEN-LAST:event_campo_cantidadKeyReleased

    private void campo_cantidadInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_campo_cantidadInputMethodTextChanged
        
    }//GEN-LAST:event_campo_cantidadInputMethodTextChanged

    public void getValores(){
        if(p1.getCodigo()>0){
        campo_codigo.setBackground(new Color(176, 255, 193));
        }
        campo_codigo.setText(String.valueOf(p1.getCodigo()));
        campo_producto.setText(p1.getNombre());
        campo_valor.setText(String.valueOf(p1.getPrecio()));
        campo_descripcion.setText(p1.getDescripcion());
        campo_cantidad.setValue(p1.getStock());
        campo_activo.setSelected(p1.getEstado());        
        //configurarSpinnerCantidad();
    }
    public void setValores() {
        p1.setCodigo(Integer.parseInt(campo_codigo.getText()));
        p1.setNombre(campo_producto.getText());
        p1.setPrecio(Double.parseDouble(campo_valor.getText()));
        p1.setDescripcion(campo_descripcion.getText());
        p1.setStock((Integer) campo_cantidad.getValue());
        p1.setEstado(campo_activo.isSelected());
    }
    private boolean validarCampos() {
    // Validar campo código
    if (campo_codigo.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this,"El código no puede estar vacío.");
        return false;
    }
    
    // Validar campo nombre
    if (campo_producto.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this,"El nombre no puede estar vacío.");
        return false;
    }
    
    // Validar campo precio
    String precioTexto = campo_valor.getText();
    if (precioTexto.isEmpty() || !precioTexto.matches("\\d+(\\.\\d{1,2})?")) {
        JOptionPane.showMessageDialog(this,"El precio debe ser un número en formato 00.00.");
        return false;
    }
    
    // Validar campo cantidad
    String cantidadTexto = campo_cantidad.getValue().toString();
    if (cantidadTexto.isEmpty() || !cantidadTexto.matches("\\d+")) {
        JOptionPane.showMessageDialog(this,"La cantidad debe ser un número entero.");
        return false;
    }
    
    // Validar campo descripción
    if (campo_descripcion.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this,"La descripción no puede estar vacía.");
        return false;
    }

    return true; // Todos los campos son válidos
}
    
void configurarSpinnerCantidad(){
        // Configurar el SpinnerNumberModel para aceptar solo números
    campo_cantidad.setModel(new SpinnerNumberModel(0, 0, 100, 1)); // (valor inicial, mínimo, máximo, incremento)

    // Configurar el editor para que solo acepte números enteros
    JSpinner.NumberEditor editor = new JSpinner.NumberEditor(campo_cantidad, "#"); // Solo acepta enteros
    campo_cantidad.setEditor(editor);

    // Añadir un InputVerifier para validar que solo se ingresen números
    JFormattedTextField txt = ((JSpinner.NumberEditor) campo_cantidad.getEditor()).getTextField();
    txt.setInputVerifier(new InputVerifier() {
        @Override
        public boolean verify(JComponent input) {
            JFormattedTextField tf = (JFormattedTextField) input;
            try {
                tf.commitEdit(); // Intenta validar y comprometer la edición
                return true; // Si es válido, retorna true
            } catch (Exception e) {
                return false; // Si no es válido, retorna false
            }
        }
    });
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardarProducto;
    private javax.swing.JCheckBox campo_activo;
    private javax.swing.JSpinner campo_cantidad;
    private javax.swing.JTextField campo_codigo;
    private javax.swing.JTextField campo_descripcion;
    private javax.swing.JTextField campo_producto;
    private javax.swing.JTextField campo_valor;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
